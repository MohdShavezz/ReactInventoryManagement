React Test (Inventory Management System)
Your task is to create the frontend for a client site using React.

You need to create the following UI components:

Login
Side Menu Bar
Home
Category
Add New Product
Edit an Existing Product
Search Product
Get all products in a category
Note
Use React with Type script
Use Proper coding conventions
The components should be small, easy to understand and reusable
The routes should be secured i.e If user is not authenticated, he should be redirected to login page
Create separate services for api calls
Use Fluent UI/Material UI, to create the UI
Use proper optimization techniques to reduce the re-renders in react app
Use Axios to call the api’s
You are not allowed to use Chat GPT or any other AI tool, or discuss it one another during the test
Use Formik for inputs and there should be proper validation
Each Input should be required
Login
You need to create a Login component.

The user should only be allowed to view other pages, if he is logged in else he would be redirected to login page.

Store the auth token in local storage.

curl --location 'https://dummyjson.com/auth/login' \
--header 'Content-Type: application/json' \
--data '{
    "username":"kminchelle",
    "password":"0lelplR"
}'
Side Menu Bar
Create a side menu bar on the left, with two options

Home
Categories
On Home, show all the products.

Under Categories, show all the categories.

When user clicks on a category. Show him the all the products, belonged to that category.

Home
On Home, show all the products in form of Cards.

The Card should contain Product thumbnail, Title, Price and some of it’s description.

The product should be displayed in paginated form and only get 10 products at a time.

When user click on a card, redirect him to details page

Provide a Search bar. So can user can search a specific product.

curl --location 'https://dummyjson.com/products/search?q=phone&limit=1&skip=0'
Category
When user clicks on a category, show him all the products belonged to that category. Similar to Home.

curl --location 'https://dummyjson.com/products/categories'
curl --location 'https://dummyjson.com/products/category/smartphones?limit=10&skip=0'
Add Product
On Home page, add a button to allow user to create new product.

The new product modal should contain following fields:

Title
Price
Category (Multi Select)
Description
curl --location 'https://dummyjson.com/products/add' \
--header 'Content-Type: application/json' \
--data '{
    "title": "iPhone 9",
    "description": "An apple mobile which is nothing like apple",
    "price": 549,
    "discountPercentage": 12.96,
    "rating": 4.69,
    "stock": 94,
    "brand": "Apple",
    "category": "smartphones"
}'
Edit Product
On Details page, provide a button for user to edit the product.

Display all the fields to user, but user can only update: 

Title
Price
Category (Multi Select)
Description
curl --location --request PUT 'https://dummyjson.com/products/1' \
--header 'Content-Type: application/json' \
--data '{
    "title": "iPhone 9",
    "description": "An apple mobile which is nothing like apple",
    "price": 549,
    "discountPercentage": 12.96,
    "rating": 4.69,
    "stock": 94,
    "brand": "Apple",
    "category": "smartphones"
}'